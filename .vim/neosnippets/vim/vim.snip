# Syntax

snippet function
alias   func fun
options head
    function ${1:#:name}(${2:#:args}) abort${3:#: closure}
        ${0:TARGET}
    endfunction

snippet if
options head
    if ${1:#:condition}
        ${0:TARGET}
    endif

snippet elseif
    elseif ${1:cond}
        ${0}

snippet else
    else

snippet for
options head
    for ${1:#:var} in ${2:iter}
        ${0:TARGET}
    endfor

snippet while
    while ${1:v:true}
        ${0}
    endwhile

snippet try
options head
    try
        ${0}
    endtry

snippet catch
options head
    catch
        ${0}

snippet finally
options head
    finally
        ${0}

snippet lambda
alias lam
    {${1:x} -> ${2:expr}}

# Template

snippet throw_not_implemented_yet
alias todo
abbr throw 'Not implemented yet (${1:name})'
    throw 'Not implemented yet (${1:name})'

# Expression

snippet assert_equal
alias ase
abbr call assert_equal(${1:actual}, ${0:expected})
    call assert_equal(${1:actual}, ${0:expected})

snippet assert_report
alias asr assert_failure
abbr call assert_report(${0:msg})
    call assert_report(${0:msg})
