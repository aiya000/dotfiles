# Syntaxes

snippet module
abbr module {module-name}
    module ${1:Module}

snippet import
abbr import {module-name}{ as alias-name}
    import ${1:Module}

snippet import_as
alias import_qualified
abbr import {module-name} as {alias-name}
    import ${1:Module} as ${2:Alias}

snippet record
abbr record {type} where\nconstructor {value-constructor}
options indent
    record ${1:TypeName} where
        constructor ${2:ValueConstructor}

snippet record_update
alias update_record
abbr record {{record-term} = {value}} {target}
    record {${1:recordTerm} = ${2:value}} ${3:target}

snippet record_func_update
alias update_func_record
abbr record {{record-term} $= {unary-function}} {target}
    record {${1:recordTerm} $= ${2:unaryFunc}} ${3:target}

snippet record_access
alias record_get access_record
abbr record {{record-term}} {target}
    record {${1:recordTerm}} ${3:target}

snippet using
abbr using ({var}:{type})
    using (${1:x}:${2:a})

snippet mutual
abbr mutual\n{things}
options indent
    mutual
        ${0}

snippet idiom_bracket
abbr [|{applicative-expression}|]
    [|${0}|]

snippet public_export
abbr public export
    public export

snippet export
abbr export
    export

# Templates

snippet main
abbr main : IO ()\nmain = {something}
    main : IO ()
    main = ${0}

snippet println
abbr printLn
    printLn

snippet doc
abbr |||
    ||| ${0}

snippet output
abbr -- {output}\n-- {__}
    -- {output}
    -- ${0}

# Directives

snippet directive
abbr %{directive-name}
    %{1:name}

snippet directive_access
alias access
abbr %access {export|public export|private}
    %access ${1:export}

snippet directive_hide
alias hide hiding
abbr %hide {a-stuff}
    %hide ${1:stuff}

snippet directive_language
alias language
abbr %language {an-extension}
    %language ${1:Extension}

snippet directive_language_elab_reflection
alias language_elab_reflection
abbr %language ElabReflection
options head
    %language ElabReflection
