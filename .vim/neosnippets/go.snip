snippet package
alias pack
abbr package ${1:packageName}
    package ${1:packageName}

snippet func
alias fun
abbr func () {}
    func ${1:#:funcName}(${2})${3:#:int} {
        ${0:#:return}
    }

snippet import
alias imp
abbr import ()
    import (
        "${1:fmt}"
    )
    ${0}

snippet if
abbr if ${1:cond} {${0:#:here}}
    if ${1:cond} {${0:#:here}}

snippet else
abbr else {${0:#:here}}
    else {${0:#:here}}

snippet array_type
abbr []${0:TypeName}
    []${0:TypeName}

snippet array_constant
alias array
abbr []${1:TypeName}{${0:here}}
    []${1:TypeName}{${0:here}}

snippet val
alias const
abbr ${1:varName} := ${0}
    ${1:varName} := ${0}

snippet var_array
alias var_slice
abbr var ${1:varName} [${2:#:size}]${0:TypeName}
    var ${1:varName} [${2:#:size}]${0:TypeName}

snippet type
abbr type ${0:Name}
    type ${0:Name}

snippet struct
alias str stru
abbr struct {${0:#:here}}
    struct {${0:#:here}}

snippet type_assert
abbr ${1:extractedVarName}, ${2:isItExpectedType} := ${3:varName}.(${0:expectedType})
    ${1:extractedVarName}, ${2:isItExpectedType} := ${3:varName}.(${0:expectedType})

snippet defer
abbr defer ${0:expr}
    defer ${0:expr}

snippet for
abbr for ${1:_}, ${2:name} := range ${3:array} {${0:#:here}}
    for ${1:_}, ${2:name} := range ${3:array} {${0:#:here}}

snippet switch
abbr switch ${1:x} {${0:#:here}}
    switch ${1:x} {${0:#:here}}

snippet case
abbr case ${1:pattern}:${0}
    case ${1:pattern}:${0}

# Expressions

snippet fprint
abbr fmt.Fprint(${1:os.Stderr}, ${2:err})
    fmt.Fprint(${1:os.Stderr}, ${2:err})

snippet fprintln
abbr fmt.Fprintln(${1:os.Stderr}, ${2:err})
    fmt.Fprintln(${1:os.Stderr}, ${2:err})

snippet println
alias pr
abbr fmt.Println(${0:#:here})
    fmt.Println(${0:#:here})

snippet log_println
alias log
abbr log.Println(${0:#:here})
    log.Println(${0:#:here})

snippet make
abbr make([]${1:type}, ${0:len})
    make([]${1:type}, ${0:len})

# Others

snippet document_comment
alias doc
    /**
     * ${0}
     */

snippet if_err
alias ife
    if err != nil {${0:#:here}}

snippet append
abbr ${1:xs} = append($1, ${0})
    ${1:xs} = append($1, ${0})
