# Syntax
snippet if
abbr if (__) {__}
options indent
    if (${1:#:cond}) {
        ${0}
    }

snippet else
abbr    else {}
options indent
    else {
        ${0:TARGET}
    }

snippet switch
abbr switch (__) {__}
options indent
    switch (${1:#:var}) {
    ${0}
    }

snippet try
abbr try {__}
options indent
    try {
        ${0}
    }

snippet catch
abbr catch (__) {__}
options indent
    catch (${1:Exception} e) {
        ${0}
    }

snippet finally
abbr finally {__}
options indent
    finally {
        ${0}
    }

snippet using_resources
alias using
abbr using (__) {__}
options indent
    using (${1:#:var resource}) {
        ${0}
    }

snippet get
abbr get {__}
options indent
    get {
        ${0}
    }

snippet set
abbr set {__}
options indent
    set {
        ${0}
    }

snippet namespace
abbr namespace __ {__}
options indent
    namespace ${1:#:Name} {
        ${0}
    }

snippet class
abbr class __ {__}
options indent
    class ${1:#:Name} {
        ${0}
    }

snippet constructor
abbr    ClassName(__) {__}
    `expand('%:t:r')`(${1:#:Parameter}) {${0}}

delete println
snippet println
abbr    Console.WriteLine(__)
options word
    Console.WriteLine(${0})

snippet readln
abbr    Console.ReadLine()
options word
    Console.ReadLine()

snippet method
abbr func function
    ${1:void} ${2:#:Name}(${3:args}) ${0}

snippet summary
abbr <summary>__</summary>
    <summary>${0}</summary>

snippet see
abbr <see cref="__"</>
    <see cref="${1:#:some_object}"/>

snippet seealso
abbr <seealso cref="__"</>
    <seealso cref="${1:#:some_object}"/>

snippet c
abbr <c>__</c>
    <c>${0}</c>

snippet example
abbr <example>__</example>
    <example>${0}</example>

snippet code
abbr <code>__</code>
    <code>${0}</code>
