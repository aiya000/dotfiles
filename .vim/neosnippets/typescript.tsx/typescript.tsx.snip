include typescript/typescript.snip
include typescript/typedoc.snip
include javascript/reactnative.snip
include html/html.snip
include neosnippet-emoji/neosnippets/emoji.snip
include neosnippet-kaomoji/neosnippets/kaomoji.snip

# Components & Tags

snippet fragment
alias frag
abbr <>${0:#:here}</>
  <>${0:#:here}</>

snippet link
abbr <Link href="/${1:#:path}">${0:here}</Link>
  <Link href="/${1:#:path}">${0:here}</Link>

delete link
snippet link_a
abbr <Link href="/${1:#:path}"><a>${0:here}</a></Link>
  <Link href="/${1:#:path}"><a>${0:here}</a></Link>

# Attributes

snippet class_name
alias cn
abbr className="${0:here}"
    className="${0:here}"

# Others

delete Component_template
snippet Component_template
abbr class __ extends Component<__, __> { render() { return (__); } }
    class ${1:Name} extends Component<${2:Props}, ${3:{}}> {
      render() {
        return (
            ${0:#:JSX}
        );
      }
    }

snippet import_react
abbr import React from 'react'
  import React from 'react'

# For react/jsx-no-comment-textnodes:
delete comment com
snippet comment
alias com
abbr {/* ${0:here} */}
  {/* ${0:here} */}

snippet Props_with_className
options indent
    interface Props {
      className?: string${0}
    }

# Expressions

snippet use_effect
abbr useEffect(() => {${0:#:here}}, [${1:usedResources}])
  useEffect(() => {${0:#:here}}, [${1:usedResources}])

snippet use_effect_on_mounted
alias mounted
abbr useEffect(() => {${0:#:here}}, [])
  useEffect(() => {${0:#:here}}, [])

snippet use_effect_on_unmounted
alias unmounted
abbr useEffect(() => {${0:#:here}}, [])
  useEffect(() => ${0:#:here}, [])
