# Syntaxes

snippet if_traditional
abbr if [ {cond} ] ; then\n{}\nfi
options indent
    if [ ${1:#:condtion} ] ; then
        ${0}
    fi

snippet else
abbr else {}
options indent
    else
        ${0:TARGET}

snippet elif_traditional
options indent
    elif [ ${1:#:condition} ] ; then
        ${0:TARGET}

snippet if_bash
alias if
abbr if [[ {cond} ]] ; then\n{}\nfi
options indent
    if [[ ${1:#:condtion} ]] ; then
        ${0}
    fi

snippet elif_bash
alias elif
abbr elif [[ {cond} ]] ; then\n
options indent
    elif [[ ${1:#:cond} ]] ; then
        ${0}

snippet for
abbr for {element} in {set} ; do\n{}\ndone
options indent
    for ${1:i} in ${2:#:var} ; do
        ${0}
    done

snippet for_bash
abbr for (( {init}; {cond}; {effect} )) ; do\n{}\ndone
options indent
    for (( ${1:#:init}; ${2:#:condtion}; ${3:#:effect} )) ; do
        ${0}
    done

snippet while
abbr while {cond} ; do\n{}\ndone
options indent
    while ${1:#:condition} ; do
        ${0:TARGET}
    done

snippet function
alias func fun
abbr function {name} () {\n{}\n}
options indent
    function ${1:#:name} () {
        ${0:TARGET}
    }

snippet case
options indent
abbr case {} in\n{}\nesac
    case ${1} in
        ${0}
    esac

snippet case_pattern
options indent
    ${2})
        ${0}
    ;;

snippet case_pattern_wildcard
options indent
    *)
        ${0}

snippet template_case
options indent
    case ${1} in
    ${2:pattern})
        ${0}
    ;;
    *)
        ${3:echo "$$1 Didn't match anything"}
    esac

# Magics

snippet shellcheck_disable
alias disable_shellcheck
    # shellcheck disable=${1:SC1090}

# Templates
