# Syntaxes

snippet if
    if ${1:#:condtion} ; then
        ${0}
    fi

snippet else
    else
        ${0:TARGET}

snippet elif
    elif ${1:#:condition} ; then
        ${0:TARGET}

snippet test
abbr [[ ${0} ]]
    [[ ${0} ]]

snippet for
    for ${1:i} in ${2:#:var} ; do
        ${0}
    done

snippet for_index
    for (( ${1:#:init}; ${2:#:condtion}; ${3:#:effect} )) ; do
        ${0}
    done

snippet while
    while ${1:#:condition} ; do
        ${0:TARGET}
    done

snippet function
alias func fun
    function ${1:#:name} () {
        ${0:TARGET}
    }

snippet case
    case ${1} in
        ${0}
    esac

snippet case_pattern
    ${2})
        ${0}
    ;;

snippet case_pattern_wildcard
    *)
        ${0}

snippet template_case
    case ${1} in
    ${2:pattern})
        ${0}
    ;;
    *)
        ${3:echo "$$1 Didn't match anything"}
    esac

snippet array_length
alias array_size
abbr ${#${1:array_name}[@]}${0}
    ${#${1:array_name}[@]}${0}

snippet array_whole
abbr ${${1:array_name}[@]}${0}
    ${${1:array_name}[@]}${0}

snippet args_length
alias args_size
abbr $#
    $#

snippet args_whole
abbr $@
    $@

# Magics

snippet shellcheck_disable
alias disable_shellcheck
    # shellcheck disable=${1:SC1090}

# Templates

snippet array_from_string
abbr IFS='${1: }' read -ra followings_array <<< "$x"${0}
    IFS='${1: }' read -ra followings_array <<< "$x"${0}
