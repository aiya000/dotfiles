snippet if
options indent
  if ${1:condition} then
    ${0}
  end

snippet equal
alias eq
abbr ==
  ==

snippet not_equal
alias ne
abbr ~=
  ~=

snippet for_in
  for ${1:x} in ${2:xs} do
    ${0}
  end

snippet for_traditional
alias for_range
options indent
  for ${1:i} = 1, #${2:xs} do
    ${0}
  end

snippet foreach
alias for
options indent
  for _, ${1:x} in ipairs(${2:xs}) do
    ${0}
  end

snippet function
alias fun
  function ${1:f}(${2:#:args})
    ${0}
  end

snippet local_function
alias lfun
  local function ${1:f}(${2:#:args})
    ${0}
  end

snippet function_in_module
alias mfun
  function M.${1:f}(${2:#:args})
    ${0}
  end

snippet lambda
alias lam
abbr function(${1:#:args})${0}end
  function(${1:#:args})${0}end

snippet array_length
alias len
abbr #${0:array}
  #${0:array}

snippet multi_line_comment
alias comment com
options indent
  --[[
  ${0}
  --]]

snippet require
abbr require('${0:here}')
  require('${0:here}')

snippet print
alias pr
abbr print(${0:#:here})
  print(${0:#:here})

snippet error
alias panic
abbr error(${0:here})
  error(${0:here})

snippet assert
abbr assert(${1:condition}, '${0:error_message}')
  assert(${1:condition}, '${0:error_message}')

snippet conditional_operator
alias cond
abbr ${1:condition} and ${2:if_true} or ${0:if_false}
  ${1:condition} and ${2:if_true} or ${0:if_false}

snippet nullish_operator
abbr or
  or
