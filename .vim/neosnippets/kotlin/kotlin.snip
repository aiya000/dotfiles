snippet fun
abbr    fun __(__) { __ }
options indent
    fun ${1:funcName}(${2:#:args})${0}

snippet main
abbr    fun main(args: Array<String>) { __ }
options head indent
    fun main(args: Array<String>) {
        ${0}
    }

snippet println
abbr    println(__)
    println(${0})

snippet print_error_line
alias print_errror_ln
    System.err.println(${1:here})

snippet class
    class ${1:Name} {${0:here}}

snippet class_without_constructor
abbr class __ {__}
    class ${1:Name} {${0}}

snippet class_with_constructor
abbr class __(__) {__}
    class ${1:Name}(${2:args}) {${0}}

snippet data_class
abbr data class __(val __: __)
    data class ${1:Name}(${2:members})

snippet new_type_with_a_cost
abbr data class __(val un__: __)
    data class ${1:Name}(val un$1: ${2:Type})

snippet companion_object
abbr companion object {__}
    companion object {${0:here}}

snippet if
    if (${1:#:cond}) {${0}}

snippet else
    else {${0:here}}

snippet get
    get (${1:#:args}) ${0}

snippet set
    set (${0:here})

snippet elvis_operator
    ?:

snippet force_unwrap_nullable_operator
    !!

snippet when
options indent
    when (${1}) {
        ${2} -> ${3}
    }

snippet when_without_arg
options indent
    when {
        ${2} -> ${3}
    }

snippet init
    init {${0:here}}

snippet for
abbr for (__ in __) {__}
    for (${1} in ${2}) {${0}}

snippet while
    while (${1:cond}) {${0}}

snippet lambda
alias lam
    { ${1:x} ->${0}}

snippet import
    import ${0}

snippet try
    try {${0:here}}

snippet catch
    catch (${1:e}: ${2:Exception}) {${0:here}}

snippet finally
    finally {${0:here}}

snippet anonymous_class_instance
alias object_anonymous_instance object
    object : ${1:ParentClass}(${2:#:constrArgs}) {${0}}

snippet constructor
    constructor(${1:args})

snippet constructor_delegate_to_parent
    constructor(${1:args}) : Super(${2:args})

snippet return
    return;

snippet enum_class
alias enum
    enum class ${1:Name} {
        ${0}
    }

snippet sealed
    sealed

snippet abstract
    abstract

snippet override
    override

snippet operator_overload_get
    operator fun get(${1:i: Int}): ${2:Int}

# Expression

snippet iterate
alias steps
    Array(${1:5}, ${2:Int->T})

snippet java_array
    val x: ${1:Int}Array = ${2:int}ArrayOf(${3:#:...})

snippet synchronized
    synchronized (${1:lockObject}) {${0}}

snippet throw_runtime_exception_as_todo_not_implemented_yet
alias todo undefined not_implemented_yet
    throw RuntimeException("TODO: Not implemented yet")

# Anotation
snippet annotation_throws
    @Throws(${1:SomeException}::class)

## Android SDK

snippet log_debug
alias logd
    Log.d("poi", ${0:here})

snippet log_error
alias loge
    Log.e("poi", ${0:here})
