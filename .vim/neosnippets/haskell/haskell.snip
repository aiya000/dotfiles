# Syntaxes

snippet deriving
abbr    deriving (__)
    deriving (${0})

snippet hiding
abbr    hiding (__)
    hiding (${0})

snippet import
abbr    import (__)
    import ${1} (${2})

snippet import_qualified
abbr    import qualified __ as __
    import qualified ${1} as ${2}

# Templates

snippet main
abbr main :: IO () \n main = {expr}
options indent
    main :: IO ()
    main = ${0}

snippet comment_block
alias com
    {- ${1} -}

snippet output
abbr -- {output}\n-- {__}
    -- {output}
    -- ${0}

snippet liquid_refinement_type_func
alias liquid_refinement_type
abbr {-@ {function} :: {type} @-}
    {-@ ${1:funcName} :: ${2} @-}

snippet liquid_refinement_type_type
abbr {-@ type {type-name} = {type} @-}
    {-@ type ${1:typeName} = ${2} @-}

snippet unboxed_sums_type
abbr (# {a-type} | {a-type} #)
    (# ${1:X} | ${2:Y} #)

snippet unboxed_sums_pattern_first
alias unboxed_sums_expression_first
abbr #( {an-expression} | #)
    #( ${0} | #)

snippet unboxed_sums_pattern_second
alias unboxed_sums_expression_second
abbr #( | {an-expression} #)
    #( | ${0} #)

snippet doctest_block
abbr >>> :{\n__\n-- >>> :}
    >>> :{
    ${0}
    -- >>> :}

snippet quasi_quote
alias q
abbr [{quoter}|{stuff}|]
    [${1:r}|${0}|]

snippet quasi_quote_i
alias qi i
abbr [i|{stuff}|]
    [i|${0}|]

snippet quasi_quote_r
alias qr r
abbr [r|{stuff}|]
    [r|${0}|]

snippet quasi_quote_s
alias qs s
abbr [s|{stuff}|]
    [s|${0}|]

snippet here_string_interpolation
alias interp
abbr ${{an-expression}}
    ${${1:expr}}${0}

snippet expand_debug_modules
alias unsafe_debug debug_unsafe
    --TODO: Remove these import
    import qualified System.IO.Unsafe as Debug
    import qualified Debug.Trace as Debug
    --
    let target = ${1:value}
        unsafePrintTarget = Debug.unsafePerformIO $ print target
    in unsafePrintTarget \`seq\` target
