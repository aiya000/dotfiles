# Syntax

snippet import
abbr import {module-name}
alias imp
options head
    import ${1:ModuleName}

snippet exposing
alias exp
abbr exposing ({stuffs})
    exposing (${2:stuffs})

snippet import_as
alias import_qualified imq
abbr import ${1:Name} as ${2:Name}
    import ${1:Name} as ${0:Name}

snippet type
abbr type ${1:Name} = ${0}
    type ${1:Name} = ${0}

snippet update_record
alias update up
    { ${1:object} | ${2:record} = ${0:value} }

snippet let
    let ${1:var} = ${2:value}
    in ${0}

snippet case
    case ${1:var} of
        ${2:pattern} -> ${0}

snippet if
    if ${1:cond} then ${2:expr} else ${3:expr}

snippet module
    module ${1:Name} exposing (${0:here})

snippet lambda
alias lam
    \\${1:var} -> ${0}

# Expression

snippet to
abbr |>
    |>

snippet from
abbr <|
    <|

snippet div
    div [${1:#:stuff}] [${2:#:stuff}]

snippet undefined
    Debug.crash "undefined"

# Other

snippet document_comment
alias doc
abbr {-|{document}-}
    {-|${0:here}-}
