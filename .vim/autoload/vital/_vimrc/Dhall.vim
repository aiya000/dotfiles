" ___vital___
" NOTE: lines between '" ___vital___' is generated by :Vitalize.
" Do not mofidify the code nor insert new lines before '" ___vital___'
function! s:_SID() abort
  return matchstr(expand('<sfile>'), '<SNR>\zs\d\+\ze__SID$')
endfunction
execute join(['function! vital#_vimrc#Dhall#import() abort', printf("return map({'read': '', '_vital_depends': '', 'readfile': '', '_vital_loaded': ''}, \"vital#_vimrc#function('<SNR>%s_' . v:key)\")", s:_SID()), 'endfunction'], "\n")
delfunction s:_SID
" ___vital___
function! s:_vital_loaded(V) abort
  let s:JSON = vital#vital#import('Web.JSON')
endfunction

function! s:_vital_depends() abort
  return ['Web.JSON']
endfunction

function! s:read(code) abort
  try
    let json = system(printf("dhall-to-json <<< '%s'", a:code))
    return s:JSON.decode(json)
  catch /^.*:E15:/
    throw 'vital: Dhall: ' . v:exception
  endtry
endfunction

function! s:readfile(path) abort
  let detail = join(readfile(a:path), "\n")
  return s:read(detail)
endfunction
