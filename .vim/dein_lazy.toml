[[plugins]]
repo    = 'basyura/TweetVim'
depends = [
    'open-browser.vim',
    'denite.nvim',
    'unite-outline',
    'twibill.vim',
    'bitly.vim',
    'favstar-vim',
    'unite.vim',
]
on_cmd  = [
    'TweetVimVersion',
    'TweetVimAddAccount',
    'TweetVimSwitchAccount',
    'TweetVimHomeTimeline',
    'TweetVimMentions',
    'TweetVimUserTimeline',
    'TweetVimListStatuses',
    'TweetVimSearch',
    'TweetVimSay',
    'TweetVimUserStream',
    'TweetVimCommandSay',
    'TweetVimCurrentLineSay',
    'TweetVimClearIcon',
]

[[plugins]]
repo   = 'mattn/favstar-vim'
on_cmd = 'FavStar'

[[plugins]]
repo = 'basyura/twibill.vim'

[[plugins]]
repo = 'basyura/bitly.vim'

[[plugins]]
repo    = 'thinca/vim-quickrun'
depends = 'vimproc.vim'
on_cmd  = 'QuickRun'
on_map  = [
    '<Plug>(quickrun)',
    '<Plug>(quickrun-op)',
]

[[plugins]]
repo    = 'basyura/J6uil.vim'
depends = [
    'webapi-vim',
    'vimproc.vim',
    'open-browser.vim',
    'denite.nvim',
]
on_cmd  = 'J6uil'

[[plugins]]
repo = 'mattn/webapi-vim'

[[plugins]]
repo   = 'Shougo/vinarise.vim'
on_cmd = [
    'Vinarise',
    'VinariseDump',
]

[[plugins]]
repo  = 'thinca/vim-themis'
on_ft = [
    'vim',
    'vimspec',
]

[[plugins]]
repo   = 'kannokanno/previm'
on_ft  = 'markdown',
on_cmd = 'PrevimOpen'

[[plugins]]
repo   = 'sgelb/TaskList.vim'
on_cmd = [
    'TaskList',
    'TaskListToggle',
]
on_map = '<Plug>TaskListToggle'

[[plugins]]
repo   = 'mbbill/undotree'
on_cmd = [
    'UndotreeToggle',
    'UndotreeFocus',
    'UndotreeShow',
    'UndotreeHide',
]

[[plugins]]
repo   = 'aiya000/adrone.vim'
on_cmd = [
    'AdroneHome',
    'AdroneSay',
    'AdroneVersion',
]

[[plugins]]
repo   = 'LeafCage/vimhelpgenerator'
on_cmd = [
    'VimHelpGenerator',
    'VimHelpGeneratorVirtual',
    'HelpIntoMarkdown',
]

[[plugins]]
repo   = 'rbtnn/vimconsole.vim'
on_cmd = [
    'VimConsoleLog',
    'VimConsoleOpen',
    'VimConsoleClose',
    'VimConsoleToggle',
    'VimConsoleClear',
    'VimConsoleRedraw',
]

[[plugins]]
repo  = 'leafgarland/typescript-vim'
on_ft = 'typescript'

[[plugins]]
repo   = 'lambdalisue/vim-pager'
on_cmd = 'PAGER'

[[plugins]]
repo   = 'lambdalisue/vim-manpager'
on_cmd = [
    'Man',
    'MANPAGER',
]

[[plugins]]
repo   = 'rhysd/try-colorscheme.vim'
on_cmd = 'TryColorscheme'

[[plugins]]
repo  = 'thinca/vim-ft-clojure'
on_ft = [
    'clojure',
    'lisp',  # Use this syntax in ft lisp, see ~/.vim/syntax/lisp.vim
]

[[plugins]]
repo   = 'lambdalisue/vim-gista'
on_cmd = 'Gist'

[[plugins]]
repo    = 'aiya000/aref-web.vim'
depends = 'open-browser.vim'
on_cmd  = [
    'Aref',
    'ArefOpenBrowser',
]

[[plugins]]
repo  = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo      = 'yomi322/neco-tweetvim'
on_source = 'TweetVim'

[[plugins]]
repo = 'rbtnn/game_engine.vim'

[[plugins]]
repo    = 'rbtnn/puyo.vim'
depends = 'game_engine.vim'
on_cmd  = 'Puyo'

[[plugins]]
repo    = 'rbtnn/reversi.vim'
depends = 'game_engine.vim'
on_cmd  = 'Reversi'

[[plugins]]
repo  = 'derekwyatt/vim-scala'
on_ft = 'scala'

[[plugins]]
repo  = 'rhysd/github-complete.vim'
on_ft = [
    'markdown',
    'gitcommit',
]

[[plugins]]
repo        = 'lambdalisue/gina.vim'
on_cmd      = 'Gina'
hook_source = 'call vimrc#dein#hook_source#gina()'

[[plugins]]
repo  = 'itchyny/vim-haskell-indent'
on_ft = 'haskell'

[[plugins]]
repo  = 'udalov/kotlin-vim'
on_ft = 'kotlin'

[[plugins]]
repo   = 'haya14busa/vim-open-googletranslate'
on_cmd = 'OpenGoogleTranslate'
on_map = '<Plug>(operator-open-googletranslate)'

[[plugins]]
repo     = 'ianks/vim-tsx'
on_event = ['BufNewFile', 'BufRead']
on_if    = 'expand("%") =~# "\.tsx$"'

[[plugins]]
repo  = 'vmchale/ghci-syntax'
on_if = 'expand("%") ==# ".ghci"'

[[plugins]]
repo  = 'aiya000/elm-vim'
rev   = 'aiya000/use-command-bang'
on_ft = 'elm'

[[plugins]]
repo  = 'aiya000/idris-vim'
rev   = 'aiya000/can-be-disabled-keymappings'
on_ft = ['idris', 'lidris']

# For only TweetVim
[[plugins]]
repo    = 'Shougo/unite.vim'
depends = 'TweetVim'
on_cmd  = 'Unite'

[[plugins]]
repo   = 'rhysd/wandbox-vim'
on_cmd = [
    'Wandbox',
    'Wandbox',
    'WandboxAbortAsyncWorks',
    'WandboxAsync',
    'WandboxOpenBrowser',
    'WandboxOptionList',
    'WandboxOptionListAsync',
    'WandboxSync',
]

[[plugins]]
repo  = 'libclang-vim/libclang-vim'
build = 'make'
on_ft = ['c', 'cpp']

[[plugins]]
repo    = 'libclang-vim/vim-textobj-clang'
depends = 'libclang-vim'
on_ft   = ['c', 'cpp']

[[plugins]]
repo   = 'haya14busa/incsearch.vim'
on_map = [
    '<Plug>(incsearch-forward)',
    '<Plug>(incsearch-backward)',
    '<Plug>(incsearch-stay)',
    '<Plug>(incsearch-nohl)',
    '<Plug>(incsearch-nohl0)',
    '<Plug>(incsearch-nohl-n)',
    '<Plug>(incsearch-nohl-N)',
    '<Plug>(incsearch-nohl-*)',
    '<Plug>(incsearch-nohl-#)',
    '<Plug>(incsearch-nohl-g*)',
    '<Plug>(incsearch-nohl-g#)',
]

[[plugins]]
repo        = 'autozimu/LanguageClient-neovim'
rev         = 'next'
build       = 'bash install.sh'
hook_source = 'call vimrc#dein#hook_source#LanguageClient_neovim()'
on_func     = [
    'LanguageClient_textDocument_hover',
    'LanguageClient_textDocument_definition',
    'LanguageClient_textDocument_rename',
    'LanguageClient_textDocument_documentSymbol',
    'LanguageClient_textDocument_references',
    'LanguageClient_workspace_symbol',
    'LanguageClient_textDocument_completion',
    'LanguageClient_setLoggingLevel(level: str)',
    'LanguageClient_textDocument_formatting',
    'LanguageClient_textDocument_rangeFormatting',
    'LanguageClient#Notify',
    'LanguageClient#Call',
    'LanguageClient_serverStatus',
    'LanguageClient_serverStatusMessage',
    'LanguageClient_statusLine',
    'LanguageClient_workspace_applyEdit',
    'LanguageClient_cquery_base',
    'LanguageClient_cquery_derived',
    'LanguageClient_cquery_callers',
    'LanguageClient_cquery_vars',
    'LanguageClient_registerHandlers',
]
on_cmd = [
    'LanguageClientStart',
    'LanguageClientStop',
]

[[plugins]]
repo   = 'ndmitchell/ghcid'
rtp    = 'plugins/nvim'
on_cmd = ['Ghcid', 'GhcidKill']
