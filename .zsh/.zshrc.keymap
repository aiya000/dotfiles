#!/usr/bin/env zsh
#
# This script depends
#    - auto-fu.zsh
#    - zsh-shell-kawaii
autoload -U edit-command-line


########################
# Register zle widgets #
########################
zle -N edit-command-line

function zle-line-init {
	auto-fu-init
	shell_kawaii_build_prompt
	zle reset-prompt
}
zle -N zle-line-init

function zle-keymap-select {
	auto-fu-zle-keymap-select "$@"
	shell_kawaii_build_prompt
	zle reset-prompt
}
zle -N zle-keymap-select

# Fix the problem of when the directory same as the subcommand name was auto suggested by auto-fu.zsh
# Example {{{
# $ ls
# src app test
# $ stack test/
#             ^ auto inserted
# }}}
function zle-line-finish {
	BUFFER="$(echo $BUFFER | sed -r 's/(.*)\/$/\1/')"
}
zle -N zle-line-finish


##################
# Define keymaps #
##################
# history-incremental-search-backward with fzf
function fzf-history-search-backward () {
	local selected=$(fc -ln 1 | fzf-tmux --no-sort)
	BUFFER="$selected"
	CURSOR=${#BUFFER}
}
zle -N fzf-history-search-backward

# Select paths by fzf
function fzf-path-finder () {
	local current_word="${LBUFFER/* /}${RBUFFER/ */}"
	current_word="${current_word/\~/$HOME}"
	if [ -z "$current_word" ] ; then
		current_word='.'
	fi
	local selected_histories=$(find "$current_word" | fzf --multi --no-sort)
	local before_cword_num=$(( ${#BUFFER} - ${#current_word} ))
	local buffer_="${BUFFER[0, $before_cword_num]}"

	zle redisplay
	BUFFER="${buffer_} ${selected_histories}"
	CURSOR=${#BUFFER}
}
zle -N fzf-path-finder


##############
# Keymapping #
##############
# Emacs nize insert-mode
bindkey -M afu '^r' fzf-history-search-backward
bindkey -M afu '^n' down-line-or-history
bindkey -M afu '^p' up-line-or-history
bindkey -M afu '^a' beginning-of-line
bindkey -M afu '^e' end-of-line
bindkey -M afu '^b' backward-char
bindkey -M afu '^f' forward-char
bindkey -M afu '^k' kill-line
bindkey -M afu '^u' backward-kill-line
bindkey -M afu '^d' delete-char
bindkey -M afu '^w' vi-backward-kill-word

# Add needed vim like keys
bindkey -M afu '^['   vi-cmd-mode
bindkey -M afu '^X^V' vi-cmd-mode
bindkey -M vicmd '_'  vi-first-non-blank
bindkey -M vicmd 'g_' vi-end-of-line

# â˜†
bindkey -M afu '^l'   vi-cmd-mode
bindkey -M afu '^]'   clear-screen
bindkey -M afu '^x^f' fzf-path-finder
bindkey -M vicmd '^v' edit-command-line
